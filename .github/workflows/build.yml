name: Build, Compress, and Release Application

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller numpy PyQt5 modbus-tk pillow pandas pyqtgraph

      - name: Prepare icon
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            python -c "from PIL import Image; img = Image.open('logo.png'); img.save('logo.ico')"
            echo "ICON_FILE=logo.ico" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            python -c "from PIL import Image; img = Image.open('logo.png'); img.save('logo.icns')"
            echo "ICON_FILE=logo.icns" >> $GITHUB_ENV
          else
            echo "ICON_FILE=logo.png" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Build executable
        run: |
          pyinstaller --onefile --windowed --icon=${{ env.ICON_FILE }} --name=UIP main.py

      - name: Compress and rename executable
        run: |
          cd dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a -tzip UIP-${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip UIP.exe
          elif [ "${{ runner.os }}" == "macOS" ]; then
            zip -r UIP-${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip UIP.app
          else
            tar -czvf UIP-${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name }}.tar.gz UIP
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: UIP-${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name }}
          path: dist/UIP-${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
